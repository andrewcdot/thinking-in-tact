/usr/local/bin/yarn run emulator
yarn run v1.22.19
$ ts-node ./src_ts/emulator.ts
Blockchain {
  currentLt: 0n,
  messageQueue: [],
  logsVerbosity: {
    print: true,
    blockchainLogs: false,
    vmLogs: 'none',
    debugLogs: true
  },

  lock: AsyncLock {},

  contractFetches: Map(0) {},

  nextCreateWalletIndex: 0,

  networkConfig: ''... 78200 more characters,


  executor: Executor {
    debugLogs: [],
    module: {
      wasmBinary: [Uint8Array],
      printErr: [Function: printErr],
      ready: [Promise],
      ___wasm_call_ctors: [Function (anonymous)],
      _create_emulator: [Function (anonymous)],
      _destroy_emulator: [Function (anonymous)],
      _emulate: [Function (anonymous)],
      _free: [Function (anonymous)],
      _run_get_method: [Function (anonymous)],
      _malloc: [Function: 192],
      _setThrew: [Function (anonymous)],
      stackSave: [Function: 2675],
      stackRestore: [Function (anonymous)],
      stackAlloc: [Function (anonymous)],
      ___cxa_can_catch: [Function (anonymous)],
      ___cxa_is_pointer_type: [Function (anonymous)],
      dynCall_iij: [Function (anonymous)],
      dynCall_ji: [Function (anonymous)],
      dynCall_iiiijii: [Function (anonymous)],
      dynCall_jii: [Function (anonymous)],
      dynCall_vijj: [Function (anonymous)],
      dynCall_jij: [Function (anonymous)],
      dynCall_iiji: [Function (anonymous)],
      dynCall_viji: [Function (anonymous)],
      dynCall_vij: [Function (anonymous)],
      dynCall_viij: [Function (anonymous)],
      dynCall_iiiij: [Function (anonymous)],
      dynCall_j: [Function (anonymous)],
      dynCall_iiiiij: [Function (anonymous)],
      dynCall_jiiii: [Function (anonymous)],
      UTF8ToString: [Function: UTF8ToString],
      stringToUTF8: [Function: stringToUTF8],
      lengthBytesUTF8: [Function: lengthBytesUTF8],
      ALLOC_NORMAL: 0,
      allocate: [Function: allocate],
      asm: [Object: null prototype],
      HEAP8: [Int8Array],
      HEAP16: [Int16Array],
      HEAP32: [Int32Array],
      HEAPU8: [Uint8Array],
      HEAPU16: [Uint16Array],
      HEAPU32: [Uint32Array],
      HEAPF32: [Float32Array],
      HEAPF64: [Float64Array],
      calledRun: true
    },
    heap: Heap { pointers: [], maxPtrs: 0, module: [Object] }
  },
  storage: LocalBlockchainStorage { contracts: Map(0) {} }
}
✨  Done in 1.78s.

Process finished with exit code 0


