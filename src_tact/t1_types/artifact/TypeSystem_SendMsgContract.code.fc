#pragma version =0.4.3;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "TypeSystem_SendMsgContract.headers.fc";
#include "TypeSystem_SendMsgContract.stdlib.fc";
#include "TypeSystem_SendMsgContract.constants.fc";
#include "TypeSystem_SendMsgContract.storage.fc";

;;
;; Contract SendMsgContract functions
;;

tuple $SendMsgContract$_contract_init() impure inline_ref {
    tuple $self = null();
    return $self;
}

;;
;; Receivers of a Contract SendMsgContract
;;

(tuple, ()) $SendMsgContract$_internal_text_df4a1614b522381670e4b4135359f0e8d745fddb15aeaaa4443921f10341f26c(tuple $self) impure inline {
    var $self = $self;
    cell $replyMsg = __gen_cell_comment_28f065fad89a8ff8647502955a1f3d53545a227be87b6095e0b039803973f72a();
    $self~$SendMsgContract$_fun_reply($replyMsg);
    return ($self, ());
}

(tuple, ()) $SendMsgContract$_internal_text_304a010771d63a9c48737687a9919b701e26c75eb5f30426aa53383b35d85c40(tuple $self) impure inline {
    var $self = $self;
    slice $to = __gen_slice_address_dc1f6237098885429f974acdb123427386351bd8abd96585aeb5d4316d5baaa3();
    int $value = 1000000000;
    $global_send($SendParameters$_constructor_bounce_to_value_mode_body(true, $to, $value, 2, __gen_cell_comment_25cb67c386ed538e44cedf5447aca3f93556eb9f9b8c80812df23dfd0505f732()));
    return ($self, ());
}

(tuple, ()) $SendMsgContract$_internal_text_52a0067d616db19dc0b908b583cb15b5e7f6f95f4c6ee7c3dfb511ede9312cbe(tuple $self) impure inline {
    var $self = $self;
    slice $to = __gen_slice_address_dc1f6237098885429f974acdb123427386351bd8abd96585aeb5d4316d5baaa3();
    int $value = 1000000000;
    $global_send($SendParameters$_constructor_bounce_to_value_mode_body(true, $to, $value, 2, $MyMsgBody$_store_cell($MyMsgBody$_constructor_x_y(1, __gen_slice_string_87c011bcd272c4c7b63d87e897af2d1dbe7dad3d0a7d4a8e6520010d13f4493d()))));
    return ($self, ());
}

(tuple, ()) $SendMsgContract$_internal_text_f4f9e85b34039f79b0cbf4afc95bf69fec4a307971d06b0809a55542e1d84273(tuple $self) impure inline {
    var $self = $self;
    var ($state'code, $state'data) = $HelloWorld$_init_child(__tact_context_sys);
    slice $address = $global_contractAddress(($state'code, $state'data));
    int $value = 1000000000;
    $global_send($SendParameters$_constructor_bounce_to_value_mode_code_data_body(true, $address, $value, 2, $state'code, $state'data, __gen_cell_comment_85d288384c0043458b02803cb22059f68803c553c3656344346468dac961f246()));
    return ($self, ());
}

;;
;; Get methods of a Contract SendMsgContract
;;

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://QmTp2Xj9r1uoGTFd5bJaPcp2JRHFHY7ZfUYdALgToztwXc";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract SendMsgContract
;;

(tuple, int) $SendMsgContract$_contract_router_internal(tuple self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Text Receivers
    if (op == 0) {
        var text_op = slice_hash(in_msg);
        
        ;; Receive "reply_text" message
        if (text_op == 0xdf4a1614b522381670e4b4135359f0e8d745fddb15aeaaa4443921f10341f26c) {
            self~$SendMsgContract$_internal_text_df4a1614b522381670e4b4135359f0e8d745fddb15aeaaa4443921f10341f26c();
            return (self, true);
        }
        
        ;; Receive "send_SendParameters_text" message
        if (text_op == 0x304a010771d63a9c48737687a9919b701e26c75eb5f30426aa53383b35d85c40) {
            self~$SendMsgContract$_internal_text_304a010771d63a9c48737687a9919b701e26c75eb5f30426aa53383b35d85c40();
            return (self, true);
        }
        
        ;; Receive "send_SendParameters_binary" message
        if (text_op == 0x52a0067d616db19dc0b908b583cb15b5e7f6f95f4c6ee7c3dfb511ede9312cbe) {
            self~$SendMsgContract$_internal_text_52a0067d616db19dc0b908b583cb15b5e7f6f95f4c6ee7c3dfb511ede9312cbe();
            return (self, true);
        }
        
        ;; Receive "send_SendParameters_with_Deploy" message
        if (text_op == 0xf4f9e85b34039f79b0cbf4afc95bf69fec4a307971d06b0809a55542e1d84273) {
            self~$SendMsgContract$_internal_text_f4f9e85b34039f79b0cbf4afc95bf69fec4a307971d06b0809a55542e1d84273();
            return (self, true);
        }
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $SendMsgContract$_contract_load();
    
    ;; Handle operation
    int handled = self~$SendMsgContract$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $SendMsgContract$_contract_store(self);
}
