;;
;; Type: HelloWorld
;;

builder $HelloWorld$init$_store(builder build_0, tuple v) inline {
    return build_0;
}

(cell, cell) $HelloWorld$_init_child(cell sys') inline_ref {
    slice sc' = sys'.begin_parse();
    cell source = sc'~load_dict();
    cell contracts = new_dict();
    
    ;; Contract Code: HelloWorld
    cell mine = __tact_dict_get_code(source, 31498);
    contracts = __tact_dict_set_code(contracts, 31498, mine);
    
    ;; Build cell
    builder b = begin_cell();
    b = b.store_ref(begin_cell().store_dict(contracts).end_cell());
    b = b.store_int(false, 1);
    b = $HelloWorld$init$_store(b, null());
    return (mine, b.end_cell());
}

;;
;; Type: RefContract
;;

tuple $RefContract$_contract_load() impure inline_ref {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return null();
    } else {
        ;; Allow only workchain deployments
        throw_unless(137, my_address().preload_uint(11) == 1024);
        return $RefContract$_contract_init();
    }
}

() $RefContract$_contract_store(tuple v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    set_data(b.end_cell());
}